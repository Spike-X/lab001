server:
  port: 8081

spring:
  redis:
    host: 192.168.31.164
    port: 6379
    password: spike-x
    database: 0
    ## 连接超时时间（毫秒）
    timeout: 1200
    jedis:
      pool:
        ## 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        ## 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        ## 连接池中的最大空闲连接
        max-idle: 8
        ## 连接池中的最小空闲连接
        min-idle: 0
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.31.164:3306/rsdb?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8
      username: root
      password: root

  #  jackson:
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: GMT+8
#    serialization:
#      write-dates-as-timestamps: false

  kafka:
    bootstrap-servers:
    template:
      default-topic:
    listener:
      ack-mode: manual_immediate
      concurrency: 3
    producer:
      #把消息发送到kafka leader分区，并且写入磁盘就认为发送成功
      acks: 1
      #重试次数，0为不启用重试机制
      retries: 0
      #控制批处理大小，单位为字节
      batch-size: 16384
      #生产者可以使用的总内存字节来缓冲等待发送到服务器的记录
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        #批量发送，延迟为5毫秒，启用该功能能有效减少生产者发送消息次数，从而提高并发量
        "[linger.ms]": "5"
    consumer:
      group-id:
      #是否自动提交offset偏移量(默认true)
      enable-auto-commit: false
      #offset偏移量规则设置:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        #Session超时设置
        session.timeout.ms: 15000

mybatis-plus:
  mapper-locations:
    - classpath:/com/aircraft/lab001/core/mapper/xml/*.xml
  type-aliases-package: com.aircraft.lab001.core.pojo
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto

logging:
  config: classpath:log4j2-${spring.profiles.active}.xml
